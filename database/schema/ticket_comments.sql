-- Create ticket comments table
CREATE TABLE public.ticket_comments (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    content text NOT NULL,
    ticket_id bigint REFERENCES public.tickets(id) ON DELETE CASCADE NOT NULL,
    user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL
);

-- Create index for common queries
CREATE INDEX ticket_comments_ticket_id_idx ON public.ticket_comments(ticket_id);
CREATE INDEX ticket_comments_user_id_idx ON public.ticket_comments(user_id);
CREATE INDEX ticket_comments_created_at_idx ON public.ticket_comments(created_at DESC);

-- Enable RLS
ALTER TABLE public.ticket_comments ENABLE ROW LEVEL SECURITY;

-- Users can view comments on their own tickets
CREATE POLICY "Users can view comments on own tickets"
    ON public.ticket_comments
    FOR SELECT
    USING (
        EXISTS (
            SELECT 1 FROM tickets
            WHERE tickets.id = ticket_comments.ticket_id
            AND tickets.user_id = auth.uid()
        )
    );

-- Agents can view all comments
CREATE POLICY "Agents can view all comments"
    ON public.ticket_comments
    FOR SELECT
    USING (
        EXISTS (
            SELECT 1 FROM auth.users
            WHERE auth.users.id = auth.uid()
            AND auth.users.raw_user_meta_data->>'role' IN ('agent', 'admin')
        )
    );

-- Users can create comments on their own tickets
CREATE POLICY "Users can create comments on own tickets"
    ON public.ticket_comments
    FOR INSERT
    WITH CHECK (
        EXISTS (
            SELECT 1 FROM tickets
            WHERE tickets.id = ticket_comments.ticket_id
            AND tickets.user_id = auth.uid()
        )
    );

-- Agents can create comments on any ticket
CREATE POLICY "Agents can create comments on any ticket"
    ON public.ticket_comments
    FOR INSERT
    WITH CHECK (
        EXISTS (
            SELECT 1 FROM auth.users
            WHERE auth.users.id = auth.uid()
            AND auth.users.raw_user_meta_data->>'role' IN ('agent', 'admin')
        )
    ); 